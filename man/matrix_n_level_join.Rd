% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/levelz.R
\name{matrix_n_level_join}
\alias{matrix_n_level_join}
\title{Join together matrix hierarchy with relevant levels - for subset}
\usage{
matrix_n_level_join(
  mat_h = NULL,
  lev_h = NULL,
  subset = NULL,
  archive = FALSE,
  time = TRUE
)
}
\arguments{
\item{mat_h}{Nested dataframe output of \link[SURSfetchR]{get_matrix_hierarchy}. If not
provided the full one will be recreated from the GetStructure API.}

\item{lev_h}{Nested dataframe output of \link[SURSfetchR]{fill_listcolumn_w_levelz} with
all the relevant levels, but will be requested if not provided.}

\item{subset}{dataframe with an id column containing the .px codes of matrices of interest.
If not provided, full mat_h list is used.}

\item{archive}{default FALSE, removes rows with archived matrices}

\item{time}{defaults to TRUE ensuring only matrices with a tagged time dimension
are included.}
}
\value{
a 13 column df with fields, matrixes and levels for all the ids in the subset.
}
\description{
This function takes the matrix hierarchy you get out of \link[SURSfetchR]{get_matrix_hierarchy}
and - gets the levels for each of the tables from the API, or rather for
a subset if it is given. Outputs a multilevel nested dataframe that makes my head
hurt, but has all the dataz.
}
\details{
So if you leave all three parameters empty, you will get the full table for all.

If both the full `mat_h` and `lev_h` are given, then subset determines which ones are
in the final table.

`lev_h` also operates as a subset if it is given, but this is really just useful
for testing.

Also, removes the archive matrices if the (default) archive parameter is set to FALSE.

Importantly, the default also removes matrices that don't have a time parameter set
which can be changed by changing `time` to `FALSE`.
}
